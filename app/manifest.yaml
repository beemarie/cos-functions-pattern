# Wskdeploy manifest for openwhisk-cloudant-trigger
# GitHub repo is located at https://github.com/IBM/openwhisk-cloudant-trigger
# Installing openwhisk actions, triggers, and rules for OpenWhisk building block - Cloudant Trigger

# Deployment using this manifest file creates following OpenWhisk components:
#   Package:    cloud-object-storage
#   Package:    $PACKAGE_NAME
#   Action:     $PACKAGE_NAME/parse_trigger.js
#   Action:     $PACKAGE_NAME/call_processing_functions.js
#   Action:     $PACKAGE_NAME/image_processing_gray.js
#   Action:     $PACKAGE_NAME/image_processing_vr.js
#   Sequence:   $PACKAGE_NAME/imagesequence
#   Sequence:   $PACKAGE_NAME/grayandwrite
#   Sequence:   $PACKAGE_NAME/vrandwrite
#   Trigger:    $TRIGGER_NAME
#   Rule:       $RULE_NAME

# This manifest file reads following env. variables:
#   PACKAGE_NAME
#   RULE_NAME
#   TRIGGER_NAME
#   BUCKET_NAME
#   ENDPOINT (cos endpoint for your buckets)
#   API_KEY (watson visual recognition)
#   VERSION (watson visual recognition version)

project:
  namespace: _
  packages:
    $PACKAGE_NAME:
      dependencies:
          # binding cloudant package named openwhisk-cloudant
          cloud-object-storage:
              location: https://github.com/ibm-functions/package-cloud-object-storage/runtimes/nodejs
      triggers:
          # Trigger
          # Creating trigger to fire events when data is inserted into database
          $TRIGGER_NAME:
              feed: myCosPkg/changes
              inputs:
                  bucket: $BUCKET_NAME
                  endpoint: $ENDPOINT
      actions:
          # Action named "get-classifiers"
          # Creating action that is printing data which is written to the database
          parse_trigger:
            function: serverless/parse_trigger.js
            runtime: nodejs:10
          call_processing_functions:
            function: serverless/call_processing_functions.js
            runtime: nodejs:10
            inputs:
              packageName: $PACKAGE_NAME
          image_processing_gray:
            function: serverless/image_processing_gray.js
            runtime: nodejs:10
          image_processing_vr:
            function: serverless/image_processing_vr.js
            runtime: nodejs:10
            inputs:
              apikey: $API_KEY
              version: $VERSION
      sequences:
          # Sequence named "process-change-cloudant-sequence"
          # Creating sequence to connect the cloudant "read" action with the "get-classifiers" action
          imagesequence:
            actions: parse_trigger, cloud-object-storage/client-get-signed-url, call_processing_functions
          grayandwrite:
            actions: image_processing_gray, cloud-object-storage/object-write
          vrandwrite:
            actions: image_processing_vr, cloud-object-storage/object-write
      rules:
          # Rule
          # Creating rule that maps database change trigger to sequence
          $RULE_NAME:
              trigger: $TRIGGER_NAME
              action: imagesequence